//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tridion.Extensions.DynamicDelivery.Factories.WebService.Tridion.Broker {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Tridion.Broker.ITridionBrokerService")]
    public interface ITridionBrokerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindPageByUrl", ReplyAction="http://tempuri.org/ITridionBrokerService/FindPageByUrlResponse")]
        string FindPageByUrl(int publicationID, string urlPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindPageMetaByUrl", ReplyAction="http://tempuri.org/ITridionBrokerService/FindPageMetaByUrlResponse")]
        string FindPageMetaByUrl(int publicationID, string urlPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetPage", ReplyAction="http://tempuri.org/ITridionBrokerService/GetPageResponse")]
        string GetPage(string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetAllPublishedPageUrls", ReplyAction="http://tempuri.org/ITridionBrokerService/GetAllPublishedPageUrlsResponse")]
        string[] GetAllPublishedPageUrls(string[] includeExtensions, string[] pathStarts, int publicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindBinaryByUrl", ReplyAction="http://tempuri.org/ITridionBrokerService/FindBinaryByUrlResponse")]
        byte[] FindBinaryByUrl(string url, int publicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetBinary", ReplyAction="http://tempuri.org/ITridionBrokerService/GetBinaryResponse")]
        byte[] GetBinary(string tcmUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetBinaryMeta", ReplyAction="http://tempuri.org/ITridionBrokerService/GetBinaryMetaResponse")]
        string GetBinaryMeta(string tcmUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindBinaryMetaByUrl", ReplyAction="http://tempuri.org/ITridionBrokerService/FindBinaryMetaByUrlResponse")]
        string FindBinaryMetaByUrl(string url, int publicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/ResolveLink", ReplyAction="http://tempuri.org/ITridionBrokerService/ResolveLinkResponse")]
        string ResolveLink(int publicationId, string tcmUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/ResolveLinkExtended", ReplyAction="http://tempuri.org/ITridionBrokerService/ResolveLinkExtendedResponse")]
        string ResolveLinkExtended(int publicationId, string tcmUri, string sourcePageUri, string excludeComponentTemplateUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetComponentWithTemplate", ReplyAction="http://tempuri.org/ITridionBrokerService/GetComponentWithTemplateResponse")]
        string GetComponentWithTemplate(string tcmUri, string templateTcmUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetComponent", ReplyAction="http://tempuri.org/ITridionBrokerService/GetComponentResponse")]
        string GetComponent(string tcmUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetLastPublishedComponent", ReplyAction="http://tempuri.org/ITridionBrokerService/GetLastPublishedComponentResponse")]
        string GetLastPublishedComponent(string schemaUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/LastPublished", ReplyAction="http://tempuri.org/ITridionBrokerService/LastPublishedResponse")]
        System.DateTime LastPublished(string[] schemaUris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindComponentsBySchema", ReplyAction="http://tempuri.org/ITridionBrokerService/FindComponentsBySchemaResponse")]
        string[] FindComponentsBySchema(string schemaUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindComponentsBySchemas", ReplyAction="http://tempuri.org/ITridionBrokerService/FindComponentsBySchemasResponse")]
        string[] FindComponentsBySchemas(string[] schemaUris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindComponentMetasBySchemas", ReplyAction="http://tempuri.org/ITridionBrokerService/FindComponentMetasBySchemasResponse")]
        string[] FindComponentMetasBySchemas(string[] schemaUris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindLatestComponentMetasBySchemas", ReplyAction="http://tempuri.org/ITridionBrokerService/FindLatestComponentMetasBySchemasRespons" +
            "e")]
        string[] FindLatestComponentMetasBySchemas(string[] schemaUris, System.DateTime sinceLastPublished);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindComponents", ReplyAction="http://tempuri.org/ITridionBrokerService/FindComponentsResponse")]
        string[] FindComponents(string[] basedOnSchemas, System.DateTime lastPublishedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindComponentsSinceLastCreated", ReplyAction="http://tempuri.org/ITridionBrokerService/FindComponentsSinceLastCreatedResponse")]
        string[] FindComponentsSinceLastCreated(string[] basedOnSchemas, System.DateTime lastCreatedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/FindComponentsSinceLastPublished", ReplyAction="http://tempuri.org/ITridionBrokerService/FindComponentsSinceLastPublishedResponse" +
            "")]
        string[] FindComponentsSinceLastPublished(string[] basedOnSchemas, System.DateTime lastPublishedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetComponentMeta", ReplyAction="http://tempuri.org/ITridionBrokerService/GetComponentMetaResponse")]
        string GetComponentMeta(string componentUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITridionBrokerService/GetKeywordHierarchy", ReplyAction="http://tempuri.org/ITridionBrokerService/GetKeywordHierarchyResponse")]
        string GetKeywordHierarchy(string categoryUriToLookIn, string keywordName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITridionBrokerServiceChannel : ITridionBrokerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TridionBrokerServiceClient : System.ServiceModel.ClientBase<ITridionBrokerService>, ITridionBrokerService {
        
        public TridionBrokerServiceClient() {
        }
        
        public TridionBrokerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TridionBrokerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TridionBrokerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TridionBrokerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string FindPageByUrl(int publicationID, string urlPath) {
            return base.Channel.FindPageByUrl(publicationID, urlPath);
        }
        
        public string FindPageMetaByUrl(int publicationID, string urlPath) {
            return base.Channel.FindPageMetaByUrl(publicationID, urlPath);
        }
        
        public string GetPage(string uri) {
            return base.Channel.GetPage(uri);
        }
        
        public string[] GetAllPublishedPageUrls(string[] includeExtensions, string[] pathStarts, int publicationID) {
            return base.Channel.GetAllPublishedPageUrls(includeExtensions, pathStarts, publicationID);
        }
        
        public byte[] FindBinaryByUrl(string url, int publicationId) {
            return base.Channel.FindBinaryByUrl(url, publicationId);
        }
        
        public byte[] GetBinary(string tcmUri) {
            return base.Channel.GetBinary(tcmUri);
        }
        
        public string GetBinaryMeta(string tcmUri) {
            return base.Channel.GetBinaryMeta(tcmUri);
        }
        
        public string FindBinaryMetaByUrl(string url, int publicationId) {
            return base.Channel.FindBinaryMetaByUrl(url, publicationId);
        }
        
        public string ResolveLink(int publicationId, string tcmUri) {
            return base.Channel.ResolveLink(publicationId, tcmUri);
        }
        
        public string ResolveLinkExtended(int publicationId, string tcmUri, string sourcePageUri, string excludeComponentTemplateUri) {
            return base.Channel.ResolveLinkExtended(publicationId, tcmUri, sourcePageUri, excludeComponentTemplateUri);
        }
        
        public string GetComponentWithTemplate(string tcmUri, string templateTcmUri) {
            return base.Channel.GetComponentWithTemplate(tcmUri, templateTcmUri);
        }
        
        public string GetComponent(string tcmUri) {
            return base.Channel.GetComponent(tcmUri);
        }
        
        public string GetLastPublishedComponent(string schemaUri) {
            return base.Channel.GetLastPublishedComponent(schemaUri);
        }
        
        public System.DateTime LastPublished(string[] schemaUris) {
            return base.Channel.LastPublished(schemaUris);
        }
        
        public string[] FindComponentsBySchema(string schemaUri) {
            return base.Channel.FindComponentsBySchema(schemaUri);
        }
        
        public string[] FindComponentsBySchemas(string[] schemaUris) {
            return base.Channel.FindComponentsBySchemas(schemaUris);
        }
        
        public string[] FindComponentMetasBySchemas(string[] schemaUris) {
            return base.Channel.FindComponentMetasBySchemas(schemaUris);
        }
        
        public string[] FindLatestComponentMetasBySchemas(string[] schemaUris, System.DateTime sinceLastPublished) {
            return base.Channel.FindLatestComponentMetasBySchemas(schemaUris, sinceLastPublished);
        }
        
        public string[] FindComponents(string[] basedOnSchemas, System.DateTime lastPublishedDate) {
            return base.Channel.FindComponents(basedOnSchemas, lastPublishedDate);
        }
        
        public string[] FindComponentsSinceLastCreated(string[] basedOnSchemas, System.DateTime lastCreatedDate) {
            return base.Channel.FindComponentsSinceLastCreated(basedOnSchemas, lastCreatedDate);
        }
        
        public string[] FindComponentsSinceLastPublished(string[] basedOnSchemas, System.DateTime lastPublishedDate) {
            return base.Channel.FindComponentsSinceLastPublished(basedOnSchemas, lastPublishedDate);
        }
        
        public string GetComponentMeta(string componentUri) {
            return base.Channel.GetComponentMeta(componentUri);
        }
        
        public string GetKeywordHierarchy(string categoryUriToLookIn, string keywordName) {
            return base.Channel.GetKeywordHierarchy(categoryUriToLookIn, keywordName);
        }
    }
}
